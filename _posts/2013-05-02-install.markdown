---
layout: page
title: Guia de Instalação para o Rails Girls
permalink: instalacao
next-link: app
---

# Guia de Instalação para o Rails Girls
<span class="muted">Tempo de Execução: 5 min ativamente / 15-30 min passivamente</span>

Para construir aplicativos e outras coisas com o Ruby on Rails, nós precisamos instalar alguns softwares e o ambiente de desenvolvimento para o seu computador.

Siga as instruções referentes ao seu sistema operacional. Se você encontrar algum problema no meio do caminho, não se preocupe! Fale com a gente e poderemos resolver juntas(os)!

* [Instalação para OS X](#instalao-para-os-x)
* [Instalação para Windows](#instalao-para-windows)
* [Instalação para Linux](#instalao-para-linux)
* [Máquina virtual](#mquina-virtual)
* [Usando um serviço de nuvem](#usando-um-servio-de-nuvem)

<hr />

## Instalação para OS X

### *1.* Vamos verificar a versão do sistema operacional.

Clique no ícone  no canto superior esquerdo e, em seguida, clique em **About this Mac**.

![Apple menu]({{site.baseurl}}/images/1.png "Apple menu")

### *2.* Na janela você encontrará o número da versão do seu sistema operacional logo abaixo de onde está escrito OS X.
Se o número da sua versão começa com 10.6, 10.7, 10.8, 10.9, 10.10 ou 10.11, este é o guia certo para você. Se for outro número, nós podemos resolver isso no evento.

![About this Mac dialog]({{site.baseurl}}/images/2.png "About this Mac dialog")

### *3a.* Se a sua versão do OS X é a 10.9 ou superior:

Se o número da sua versão começa com 10.9, 10.10 ou 10.11, siga estes passos; caso contrário, vá para o passo **3b**. Agora vamos instalar o homebrew e o rbenv.

#### *3a1.* Instale o Command Line Tools no terminal::

{% highlight sh %}
xcode-select --install
{% endhighlight %}

#### *3a2.* Instale o [Homebrew](http://brew.sh/):

Para instalar o Homebrew, abra uma janela do terminal e execute o seguinte comando:

{% highlight sh %}
ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
{% endhighlight %}

Mais informações - em português brasileiro - sobre o Homebrew você pode encontrar [aqui](http://brew.sh/index_pt-br.html).

#### *3a3.* Instale o [rbenv](https://github.com/sstephenson/rbenv):

Uma vez instalado o Homebrew, execute os seguintes comandos no terminal:

{% highlight sh %}
brew update
brew install rbenv ruby-build
echo 'eval "$(rbenv init -)"' >> ~/.bash_profile
echo 'export PATH="$HOME/.rbenv/shims:$PATH"' >> ~/.bash_profile
source ~/.bash_profile
{% endhighlight %}

#### *3a4.* Faça o build do Ruby com o rbenv:

Você pode encontrar a versão mais nova do Ruby com o seguinte comando:
{% highlight sh %}
rbenv install -l
{% endhighlight %}

Ele fornece uma listagem de todas as versões disponíveis e você poderá realizar a instalação utilizando o comando abaixo acompanhado do número da versão, como exemplificado:

{% highlight sh %}
rbenv install 2.3.1
{% endhighlight %}

**Observação:** Na data da tradução deste documento, a versão mais recente é, de fato, a 2.3.1. Caso queira acompanhar melhor o desenvolvimento e lançamento das novas versões do Ruby, dê uma olhada [aqui](https://www.ruby-lang.org/pt/)

**Atenção:** Caso você obtenha a mensagem de erro “OpenSSL::SSL::SSLError: … : certificate verify failed”, tente da seguinte maneira:

{% highlight sh %}
brew install curl-ca-bundle
cp /usr/local/opt/curl-ca-bundle/share/ca-bundle.crt `ruby -ropenssl -e 'puts OpenSSL::X509::DEFAULT_CERT_FILE'`
{% endhighlight %}

#### *3a5.* Defina o Ruby padrão:

Agora vamos definir a versão do Ruby que desejamos que seja a padrão utilizando o comando abaixo com o número da versão:

{% highlight sh %}
rbenv global 2.3.1
{% endhighlight %}

#### *3a6.* Instale o Rails:

Ainda na sua janela do terminal, digite o seguinte comando:

{% highlight sh %}
gem install rails --no-document
{% endhighlight %}

### *3b.* Se a sua versão do OS X for a 10.6, 10.7 ou 10.8:
Faça o download do **RailsInstaller** para a sua versão do OS X:
* [RailsInstaller para OS X 10.7 e 10.8](http://railsinstaller.s3.amazonaws.com/RailsInstaller-1.0.4-osx-10.7.app.tgz) <span class="muted">(325MB)</span>
* [RailsInstaller para OS X 10.6](http://railsinstaller.s3.amazonaws.com/RailsInstaller-1.0.4-osx-10.6.app.tgz) <span class="muted">(224MB)</span>

Maiores informações sobre o **RailsInstaller** em português brasileiro você encontra [aqui](http://www.railsinstaller.org/pt-BR)

Dê um clique duplo no arquivo baixado e ele será descompactado no diretório atual. Dê um clique duplo no arquivo recém descompactado ‘RailsInstaller-1.0.4-osx-10.7.app’ ou ‘RailsInstaller-1.0.4-osx-10.6.app’ e siga as instruções. O arquivo README com ‘Rails Installer OS X’ no topo será aberto. Por favor, **ignore** as instruções deste arquivo!

Se a versão do Rails não era a última, você pode atualizar isso utilizando o comando a seguir na sua janela do terminal:

{% highlight sh %}
gem update rails --no-document
{% endhighlight %}

Se certifique de que tudo está funcionando utilizando o comando a seguir para gerar uma nova aplicação:

{% highlight sh %}
rails new myapp
{% endhighlight %}

### *4.* Instale um editor de texto para editar os arquivos de código.

Para este evento, recomendamos o editor de textos Atom.

* [Baixe e instale o Atom!](https://atom.io/)

Se você está usando o Mac OS X 10.7 ou versões mais velhas, você pode usar outro editor, o [Sublime Text 2](http://www.sublimetext.com/2).

### *5.*  Atualize o seu navegador!

Abra o site [whatbrowser.org](http://whatbrowser.org) and  e atualize seu navegador caso você não esteja utilizando a versão mais recente.

Agora você deve ter uma instalação para desenvolver em Ruby on Rails funcionando na sua máquina! Parabéns! :)

<hr />

## Instalação para Windows

### *1.* Instale o Rails

Faça o download do  [RailsInstaller](https://s3.amazonaws.com/railsinstaller/Windows/railsinstaller-3.2.0.exe) e o execute. Clique ao longo do processo de instalação usando as opções padrão.

Abra o `Command Prompt with Ruby on Rails` e execute os comandos a seguir para resolver um problema no RailsInstaller 3.2.0.

**Treinadoras(es):**
Há um erro de “No such file or directory” ao utilizar o comando `rails` no RailsInstaller 3.2.0. Isso é causado por um problema com caminhos incorretos nos arquivos `rails.bat` e `bundle.bat`. Nós podemos resolver isso copiando o arquivo `rake.bat` para `rails.bat` e `bundle.bat`. ([página sobre essa questão no Github](https://github.com/railsinstaller/railsinstaller-windows/issues/76))

{% highlight sh %}
cd C:\RailsInstaller\Ruby2.2.0\bin
copy rake.bat rails.bat
copy rake.bat bundle.bat
{% endhighlight %}

Abra o `Command Prompt with Ruby on Rails`  e execute o seguinte comando:

{% highlight sh %}
rails -v
{% endhighlight %}

Se a versão do Rails for anterior à versão 5, atualize utilizando o seguinte comando:

{% highlight sh %}
gem update rails --no-document
{% endhighlight %}

## Erros Possíveis

### Gem::RemoteFetcher error

Se você se deparar com este erro ao executar os comandos `rails new railsgirls` ou `gem update rails`:

{% highlight sh %}
Gem::RemoteFetcher::FetchError: SSL_connect returned=1 errno=0 state=SSLv3 read
server certificate B: certificate verify failed (https://rubygems.org/gems/i18n-
0.6.11.gem)
{% endhighlight %}

Isso significa que você tem uma versão mais antiga do RubyGems e precisará atualizar manualmente. Primeiro, verifique a sua versão do Rubygems utilizando o comando a seguir:

{% highlight sh %}
gem -v
{% endhighlight %}

Se a versão mostrada for anterior à  `2.2.3` você terá que atualizar manualmente. Siga as instruções a seguir:

Primeiro, faça o download do [ruby-gems-update gem](https://rubygems.org/gems/rubygems-update-2.6.7.gem). Mova o arquivo para `c:\\rubygems-update-2.6.7.gem` e então execute:

{% highlight sh %}
gem install --local c:\\rubygems-update-2.6.7.gem
update_rubygems --no-document
gem uninstall rubygems-update -x
{% endhighlight %}

Verifique novamente a sua versão do RubyGems!

{% highlight sh %}
gem -v
{% endhighlight %}

Se certifique que é igual ou superior a `2.6.7`.  Execute novamente o comando que estava resultando em erro anteriormente.

Se você ainda está tendo problemas, você pode obter a versão mais atual do RubyGems online em [rubygems.org](https://rubygems.org/pages/download). Se você clicar em **GEM**, você obterá a última versão.

### Durante o bundle install

The `Gem::RemoteFetcher::FetchError: SSL_connect` can also occur during the `bundle install` stage when creating a new rails app.

O erro fará menção ao [bit.ly/ruby-ssl](http://bit.ly/ruby-ssl). O que é relevante para usuários do Windows neste ponto é este [gist do GitHub gist](https://gist.github.com/867550). A maneira descrita pelo manual é bem sucedida para resolver o erro relativo ao `bundle install`.

### Erro "‘x64_mingw’ is not a valid platform

Às vezes você obtém o erro a seguir quando executa o comando  `rails server`:
`'x64_mingw' is not a valid platform`
Se você se deparar com esse erro depois de usar o **RailsInstaller** você tem que fazer uma pequena edição no arquivo `Gemfile`:

Olhe lá no final do arquivo. Você provavelmente verá algo parecido com isso como uma das últimas linhas do arquivo: `gem 'tzinfo-data', platforms: [:mingw, :mswin, :x64_mingw]`. Se você tiver essa linha com `:x64_mingw`, por favor delete a parte com `:x64_mingw`. No final, deverá ter apenas: `'tzinfo-data', platforms: [:mingw, :mswin]`

Depois que você fizer isso, use seu prompt de comando novamente e digite `bundle update`.

### *2.* Instale um editor de texto para editar os arquivos de código.

Para este evento, recomendamos o editor de textos Atom.

* [Baixe e instale o Atom!](https://github.com/atom/atom/releases/latest)
  * Baixe o arquivo zip Atom para Windows e descompacte.
  * Copie a pasta para o seu Program Files (ou Arquivos de Programas).
  * Inicie o Atom na pasta.

Se você está utilizando o Windows Vista ou versões mais antigas, você pode utilizar outro editor de textos, o [Sublime Text 2](http://www.sublimetext.com/2).

### *3.*  Atualize seu navegador!

Se você usa o Internet Explorer, nós recomendamos que você instale o [Firefox](mozilla.org/firefox) or [Google Chrome](google.com/chrome).

Abra o site [whatbrowser.org](http://whatbrowser.org) e atualize seu navegador caso você não esteja utilizando a versão mais recente.

### *4.* Instale o Node.js

Isso não é estritamente necessário mas evita um problema com  `ExecJS::RuntimeError` que pode ocorrer mais tarde.  ([veja stackoverflow](https://stackoverflow.com/questions/12520456/execjsruntimeerror-on-windows-trying-to-follow-rubytutorial)).

* Visite [https://nodejs.org/](https://nodejs.org/)  e instale o pacote Node LTS.
* Reabra seu prompt de comando.

Verifique sua versão do Node.js utilizando o comando:

{% highlight sh %}
node --version
{% endhighlight %}

Se certifique de que a versão está sendo exibida.

### *5.* Verifique o ambiente.

Verifique que tudo está funcionando executando o comando gerador de aplicação:

{% highlight sh %}
rails new myapp
cd myapp
rails server
{% endhighlight %}

Visite `http://localhost:3000` no seu navegador e você deve ver a página com ‘Yay! You’re on Rails!’.

Agora você deve ter uma instalação para desenvolver em Ruby on Rails funcionando na sua máquina! Parabéns! :)

**Treinadoras(es):** Nós recomendamos que você verifique tudo usando o comando 'scaffold' e inserindo dados para assegurar que tudo está funcionando.

<hr />

## Instalação para Linux

### *1.* Instale o Rails


Para instalar o ambiente de desenvolvimento do Ruby on Rails você precisa apenas copiar a linha abaixo para a sua respectiva distribuição Linux (Ubuntu ou Fedora), colar no terminal e apertar Enter. Aproveite o texto correndo na tela porque vai levar algum tempo. Encorajamos que você pegue uma bebida refrescante antes do início da instalação.

#### Para Ubuntu:

{% highlight sh %}
sudo apt-get install curl
bash < <(curl -sL https://raw.github.com/railsgirls/installation-scripts/master/rails-install-ubuntu.sh)
{% endhighlight %}

Se você vai utilizar uma instalação RVM com o gnome-terminal, você provavelmente terá que mudar as opções padrão antes de poder ver e usar as versões corretas do Ruby on Rails. Descubra como fazer isso em: [RVM documentation](http://rvm.io/integration/gnome-terminal).

#### Para Fedora:

{% highlight sh %}
bash < <(curl -sL https://raw.github.com/railsgirls/installation-scripts/master/rails-install-fedora.sh)
{% endhighlight %}

Se certifique de que tudo está funcionando direito executando o comando gerador de aplicação:

{% highlight sh %}
rails new myapp
{% endhighlight %}


### *2.* Instale um editor de textos para editar os arquivos de código.

Para este evento, recomendamos o editor de textos Sublime Text.

* [Baixe e instale o Sublime Text] http://www.sublimetext.com/2)


### *3.* Atualize seu navegador!

Abra o site [whatbrowser.org](http://whatbrowser.org) e atualize seu navegador caso você não esteja utilizando a versão mais recente.

Agora você deve ter uma instalação para desenvolver em Ruby on Rails funcionando na sua máquina! Parabéns! :)

<hr />

## Máquina Virtual

Ao invés de instalar todas as ferramentas na sua máquina, você pode preparar um ambiente de desenvolvimento em uma Máquina Virtual. Verifique todos os detalhes [aqui]({% post_url 2014-03-24-alternative-dev-environment %}).

<hr />

## Usando um serviço de nuvem

Ao invés de instalar o Ruby on Rails e o editor de textos no seu computador, você poderá utilizar um serviço na web para desenvolvimento. Tudo o que você precisa é um navegador e uma conexão de internet. Este guia explica como começar com o [nitrous.io](https://nitrous.io). Se você está usando um serviço diferente, ele talvez utilize termos diferentes mas o processo costuma ser bastante similar.

### *1.* Update your browser

Se você usa o Internet Explorer, nós recomendamos que você instale o [Firefox](mozilla.org/firefox) or [Google Chrome](google.com/chrome).

Abra o site [whatbrowser.org](http://whatbrowser.org) e atualize seu navegador caso você não esteja utilizando a versão mais recente.

### *2.* Crie uma conta

Visite [https://nitrous.io](https://nitrous.io/) e cadastre-se.

### *3.* Crie um projeto Ruby on Rails
* Faça o login na sua conta do Nitrous
* Será solicitado que você crie uma workstation - escolha a modalidade free.
* **Crie um projeto:** escolha Ruby on Rails nos modelos - todo o resto pode permanecer como está, mas você pode mudar o nome do projeto se você quiser.
* Leva um tempinho até que o seu projeto esteja pronto.

### *4.* Encontre e reinicie seu projeto
* Se você acabou de criar seu projeto, você provavelmente pode pular esses passos - eles são importantes caso você faça seu login no Nitrous novamente mais tarde.
* Se você ainda não usou sua workstation ou projetos durante algum tempo, eles podem ter sido desativados por inatividade. Se você se logar no Nitrous e for informada(o) de que sua workstation foi desativada, reinicie utilizando o botão 'Start Workstation'.
* Você pode encontrar seus projetos no Nitrous indo ao dashboard através do menu que encontra-se no topo.
* Escolha seu projeto na lista - se foi desligado, inicie utilizando o botão com o símbolo de liga/desliga.
* Quando seu projeto estiver ativo e em execução, escolha 'IDE' para começar a escrever código.

### *5.* Escrevendo código no seu projeto
* À esquerda, você encontrará um navegador de arquivos onde você poderá navegar através de diretórios e arquivos do projeto.
* No meio, você encontrará o editor onde você pode modificar seus arquivos.
* Na parte de baixo, você encontrará o terminal onde você pode executar comandos.
* Tudo o que você precisa está bem ali na janela do seu navegador - você não precisa iniciar um editor de textos tampouco uma janela de terminal em outro local.
* Se você está seguindo um guia ou tutorial, utilize os comandos para Linux mesmo se você estiver em um computador com Windows - seu sistema operacional não interfere nisso pois todos os comandos que você digitar no terminal do seu projeto serão executados na máquina onde está localizado seu projeto na nuvem e esta máquina utiliza Linux.
* Se um guia ou tutorial pedir que você inicie o servidor Rails com o comando 'rails server' ou 'rails s', acrescente o trecho '-b 0.0.0.0' ao comando tornando-o 'rails server -b 0.0.0.0'.
* Se um guia ou tutorial pedir que você aponte seu navegador para algo como http://localhost:3000, vá para o menu ‘Preview’ e escolha ‘Port 3000 - HTTP’.
* Se, por exemplo, for pedido que você abra a URL http://localhost:3000/posts, abra a visualização (preview) através do menu e acrescente ‘/posts’ manualmente à URL que foi aberta.
